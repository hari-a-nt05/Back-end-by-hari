"""Initial migration

Revision ID: 25febb77c931
Revises:
Create Date: 2025-09-18 15:28:57.636958

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "25febb77c931"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "config",
        sa.Column("config_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("config_id"),
        sa.UniqueConstraint("path"),
        sa.UniqueConstraint("path", name="uq_config_path"),
    )
    op.create_table(
        "job_posts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("company_intro", sa.Text(), nullable=True),
        sa.Column("position", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column(
            "employment_type",
            sa.Enum("full_time", "part_time", "contract", name="employmenttype"),
            nullable=True,
        ),
        sa.Column("department", sa.String(), nullable=True),
        sa.Column("position_summary", sa.Text(), nullable=True),
        sa.Column("key_responsibilities", sa.JSON(), nullable=True),
        sa.Column("required_qualifications", sa.JSON(), nullable=True),
        sa.Column("preferred_qualifications", sa.JSON(), nullable=True),
        sa.Column("addons", sa.JSON(), nullable=True),
        sa.Column("why_join_us", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_job_posts_id"), "job_posts", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("role", sa.Enum("admin", "user", name="userrole"), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "candidates",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("job_post_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("current_location", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("contact_number", sa.String(), nullable=True),
        sa.Column("slot_availability", sa.DateTime(), nullable=True),
        sa.Column("rate_card_hourly", sa.Numeric(), nullable=True),
        sa.Column("experience_years", sa.Numeric(), nullable=True),
        sa.Column(
            "visa_type",
            sa.Enum("h1b", "l1", "f1", "other", name="visatype"),
            nullable=True,
        ),
        sa.Column("willing_to_relocate", sa.Boolean(), nullable=True),
        sa.Column("overall_gpt_score", sa.Numeric(), nullable=True),
        sa.Column("notice_period_days", sa.Integer(), nullable=True),
        sa.Column("cv_file_url", sa.String(), nullable=True),
        sa.Column("remarks", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["job_post_id"],
            ["job_posts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_candidates_email"), "candidates", ["email"], unique=False)
    op.create_index(op.f("ix_candidates_id"), "candidates", ["id"], unique=False)
    op.create_table(
        "candidate_skills",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("skill_name", sa.String(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("candidate_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["candidates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_candidate_skills_id"), "candidate_skills", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_candidate_skills_id"), table_name="candidate_skills")
    op.drop_table("candidate_skills")
    op.drop_index(op.f("ix_candidates_id"), table_name="candidates")
    op.drop_index(op.f("ix_candidates_email"), table_name="candidates")
    op.drop_table("candidates")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_job_posts_id"), table_name="job_posts")
    op.drop_table("job_posts")
    op.drop_table("config")
    # ### end Alembic commands ###
