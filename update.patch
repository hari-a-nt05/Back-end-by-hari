diff --git a/app/core/config.py b/app/core/config.py
index 6bd8f8f..fe41eb2 100644
--- a/app/core/config.py
+++ b/app/core/config.py
@@ -2,7 +2,7 @@ import os
 import secrets
 from typing import Annotated, Any, Literal
 
-from pydantic import AnyUrl, BeforeValidator, computed_field
+from pydantic import AnyUrl, BeforeValidator, computed_field, Field
 from pydantic_settings import BaseSettings, SettingsConfigDict
 
 
@@ -41,8 +41,9 @@ class Settings(BaseSettings):
 
     JWT_ALGORITHM: str = "HS256"
 
-    DB_URL: str = os.getenv(
-        "DATABASE_URL", "postgresql://postgres:postgres@localhost/hirehub"
+    DB_URL: str = Field(
+        "postgresql://postgres:navat@localhost/yourdb",
+        env="DATABASE_URL",
     )
     # Microsoft Graph / Azure AD configuration (optional)
     AZURE_TENANT_ID: str | None = None
diff --git a/app/core/security.py b/app/core/security.py
index 7270f72..cf77af0 100644
--- a/app/core/security.py
+++ b/app/core/security.py
@@ -7,7 +7,12 @@ from passlib.context import CryptContext
 from app.core.config import settings
 from app.utils.helper import get_current_time
 
-pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
+# Use passlib's bcrypt_sha256 scheme. Passlib will pre-hash with
+# SHA-256 before calling bcrypt which avoids the bcrypt 72-byte limit.
+pwd_context = CryptContext(
+    schemes=["argon2", "bcrypt_sha256"],
+    deprecated="auto",
+)
 
 
 def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):
@@ -30,6 +35,16 @@ def get_password_hash(password):
     return pwd_context.hash(password)
 
 
+def needs_rehash(hashed_password: str) -> bool:
+    """Return True if the stored hash should be upgraded to the
+    current preferred scheme/parameters.
+    """
+    try:
+        return pwd_context.needs_update(hashed_password)
+    except Exception:
+        return False
+
+
 def decode_jwt_token(token: str):
     try:
         payload = jwt.decode(
diff --git a/requirements.txt b/requirements.txt
index 68b42de..26be821 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -3,7 +3,8 @@ uvicorn
 sqlalchemy
 psycopg2-binary
 python-jose[cryptography]
-passlib[bcrypt]
+passlib==1.7.4
+argon2-cffi==21.3.0
 pydantic
 alembic
 pydantic-settings
